enum Role {
    User
    Admin
}

enum TechnicianRole {
    Undefined,
    Eletricician,
    Mechanic,
    Plumber
}

type User {
    id: ID!
    username: String!
    email: String!
    role: Role!
}

type Technician {
    id: ID!
    username: String!
    passwordHash: String!
    firstName: String!
    lastName: String!
    email: String!
    address: String!
    latitude: Float
    longitude: Float
    role: String!
    createdAt: String!
}

input TechnicianCreateInput {
    username: String!
    passwordHash: String!
    firstName: String!
    lastName: String!
    email: String!
    address: String!
    latitude: Float
    longitude: Float
    role: TechnicianRole!
}

input TechnicianByQueryInput {
    name: String
    city: String
    role: TechnicianRole
}

input UserUpdateInput {
    username: String
    email: String
    role: [TechnicianRole]
}

type Query {
    userById(id: ID!): User
    users: [User!]!
    technicians: [Technician!]!
    getTechniciansByQuery(query: TechnicianByQueryInput): [Technician]!
}

type Mutation {
    createTechnician(technician: TechnicianCreateInput!): Technician!
    deleteTechnician(id: ID!): Boolean
    updateUser(id: ID!, user: UserUpdateInput): User!
    deleteUser(id: ID!): Boolean
}
